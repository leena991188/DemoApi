steps:
  # Step 1: Build Docker image
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '-t'
      - '$_AR_HOSTNAME/$PROJECT_ID/$_AR_REPO/$_SERVICE_NAME:$COMMIT_SHA'
      - .

  # Step 2: Push Docker image to Artifact Registry
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_AR_HOSTNAME/$PROJECT_ID/$_AR_REPO/$_SERVICE_NAME:$COMMIT_SHA'

  # Step 3: Apply Cloud Deploy pipeline and targets
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'gcloud'
    args:
      [
        "deploy", "apply",
        "--file=clouddeploy.yaml",
        "--region=$_DEPLOY_REGION",
        "--project=$PROJECT_ID"
      ]
    id: Apply deploy config

  # Step 4: Wait for Cloud Deploy resources to be ready
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args:
      - -c
      - |
        echo "Waiting for Cloud Deploy resources to become available..."
        sleep 60
    id: Wait for pipeline propagation

  # Step 5: Create a Cloud Deploy release to dev
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: gcloud
    args:
      [
        "deploy", "releases", "create", "release-${BUILD_ID}-dev",
        "--delivery-pipeline=demoapi-pipeline",
        "--region=$_DEPLOY_REGION",
        "--images=demoapi=$_AR_HOSTNAME/$PROJECT_ID/$_AR_REPO/$_SERVICE_NAME:$COMMIT_SHA",
        "--project=$PROJECT_ID",
        "--to-target=dev"
      ]

  # Step 6: Promote the same release to staging
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: gcloud
    args:
         [
        "deploy", "releases", "create", "release-${BUILD_ID}-staging",
        "--delivery-pipeline=demoapi-pipeline",
        "--region=$_DEPLOY_REGION",
        "--images=demoapi=$_AR_HOSTNAME/$PROJECT_ID/$_AR_REPO/$_SERVICE_NAME:$COMMIT_SHA",
        "--project=$PROJECT_ID",
        "--to-target=staging"
      ]

  # Step 7: Promote to prod
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: gcloud
    args:
        [
        "deploy", "releases", "create", "release-${BUILD_ID}-prod",
        "--delivery-pipeline=demoapi-pipeline",
        "--region=$_DEPLOY_REGION",
        "--images=demoapi=$_AR_HOSTNAME/$PROJECT_ID/$_AR_REPO/$_SERVICE_NAME:$COMMIT_SHA",
        "--project=$PROJECT_ID",
        "--to-target=prod"
      ]

timeout: 1200s

images:
  - '$_AR_HOSTNAME/$PROJECT_ID/$_AR_REPO/$_SERVICE_NAME:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
